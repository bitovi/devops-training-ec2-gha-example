name: Deploy D2EC2 Testing branch

on:
  push:
    branches: [ d2ec2 ]

permissions:
  contents: read
 
jobs:
  deploy:
    runs-on: ubuntu-latest
    #environment:
     # name: ${{ github.ref_name }}
     # url: ${{ steps.deploy.outputs.lb_url }}

    steps:
      - name: Create an RDS DB
        id: create-rds
        uses: bitovi/github-actions-deploy-rds@v0.1.2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
          aws_default_region: us-east-1
    # #   
          tf_state_bucket_destroy: true
          tf_state_file_name_append: rds
      #    #tf_stack_destroy: true
          aws_rds_db_enable: true
          aws_rds_db_proxy: true
          aws_rds_db_name: postgres
          aws_rds_db_ingress_allow_all: true
          aws_rds_db_publicly_accessible: true

      - name: Configure AWS Credentials
        uses: bitovi/github-actions-apply-sql-files-to-postgres@inital-branch
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
          aws_default_region: us-east-1 
          #aws_secret_name: ${{ steps.create-rds.outputs.db_secret_details_name }}
          aws_secret_name: b4i-d4s-t6g-ec2-gha-e5e-d32-rdsdb-pub-FdyNx
          sql_scripts_path: sql-files
          dry_run: false

#      - id: deploy
#        uses: bitovi/github-actions-deploy-github-runner-to-ec2@v0.1.1
#        with:
#          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
#          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
#          aws_default_region: us-east-1
#
#          ec2_instance_type: t2.medium
#          ec2_instance_public_ip: false
#          
#          repo_url: https://github.com/bitovi/devops-training-ec2-gha-example
#          repo_access_token: ${{ secrets.THIS_REPO_RUNNER_TOKEN }}
#          
#          tf_state_file_name_append: github-runner
#          stack_destroy: true
#          tf_state_bucket_destroy: true

  #initialize:
   # runs-on: self-hosted
   # steps:
 


    #- id: deploy2
      #uses: bitovi/github-actions-deploy-docker-to-ec2@commons-rc
      #with:
        #ansible_skip: true

     #   aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
     #   aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
     #   aws_default_region: us-east-1
        #tf_state_bucket_destroy: true
        #stack_destroy: true
     #   ec2_port_list: 3001
     #   app_port: 3001
     #   lb_port: 3001
        #tf_state_file_name_append: d2ec2
     #   stack_destroy: true
     #   tf_state_bucket_destroy: true
       # lb_healthcheck: "HTTP:3001"
     #   ec2_volume_size: 16
     #   aws_rds_db_enable: 
     #   docker_remove_orphans: true

    #- name: Create an RDS DB
    #  id: create-rds
    #  uses: bitovi/github-actions-deploy-rds@commons-testing
    #  with:
    #    aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
    #    aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
    #    aws_default_region: us-east-1
    #    
    #    tf_state_bucket_destroy: true
    #    tf_stack_destroy: true
    #    aws_rds_db_enable: true
    #    aws_rds_db_proxy: true
    #    aws_rds_db_name: postgres
    #    aws_additional_tags: '{\"some\":\"tag\"}'
    #    aws_rds_db_user: pepe
    #    aws_rds_db_allowed_security_groups:
        # This is only for traffic coming from the same VPC
    #    aws_rds_db_ingress_allow_all: true
    #    aws_rds_db_allocated_storage: 10
    #    aws_rds_db_max_allocated_storage:
    #    aws_rds_db_instance_class: db.t3.small
    #- name: Destroy an Redis DB
    #  id: destroy
    #  uses: bitovi/github-actions-deploy-redis-db@initial-testing-branch
    #  with:
    #    aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
    #    aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
    #    aws_default_region: us-east-1
    #    
        #tf_state_bucket_destroy: true
    #    tf_stack_destroy: true
    #    aws_redis_enable: true


    #- name: Create an Redis DB
    #  id: create-redis
    #  uses: bitovi/github-actions-deploy-redis-db@initial-testing-branch
    #  with:
    #    aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
    #    aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
    #    aws_default_region: us-east-1
    #    
    #    tf_state_bucket_destroy: true
    #    tf_stack_destroy: true
    #    aws_redis_enable: true
    #    aws_redis_cloudwatch_enabled: false
       # aws_redis_automatic_failover: true
        
    #    tf_state_file_name_append: rds-dev-db
    #- id: ecr-publish
    #  name: Build image
    #  uses: bitovi/github-actions-ecr-publish@v0.1.0
    #  with:
    #    aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
    #    aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
    #    aws_default_region: us-east-1
    #    aws_ecr_repo_name: testing-repo-leo
    #    image_tag: auth
    #- run: |
    #    echo "Image Created:  ${{ env.image }}"

    #    echo "Tag Created: ${{ env.tag }}"
